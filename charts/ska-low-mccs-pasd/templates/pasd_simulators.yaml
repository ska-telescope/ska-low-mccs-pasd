{{- $pasd_config := .Files.Get "data/pasd_configuration.yaml"}}
{{- range $key, $value := ((.Values.simulators).pasds)}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pasd-configuration-{{$key}}
  namespace: {{$.Release.Namespace}}
  labels:
    component: pasd-simulator-{{$key}}
data:
  pasd_configuration.yaml: |-
{{ $pasd_config | indent 4}}
---
apiVersion: v1
kind: Service
metadata:
  name: pasd-simulator-{{$key}}
  namespace: {{$.Release.Namespace}}
  labels:
    component: pasd-simulator-{{$key}}
spec:
  ports:
  - name: tcp
    port: {{$value.port | default 502}}
  type: ClusterIP
  selector:
    component: pasd-simulator-{{$key}}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{$value.host}}
  namespace: {{$.Release.Namespace}}
  labels:
    component: pasd-simulator-{{$key}}
spec:
  selector:
    matchLabels:
      component: pasd-simulator-{{$key}}
  serviceName: pasd-simulator-{{$key}}
  replicas: 1
  template:
    metadata:
      labels:
        component: pasd-simulator-{{$key}}
    spec:
      containers:
      - name: simulator-{{$key}}
        image: {{$.Values.low_mccs_pasd.image.registry}}/{{$.Values.low_mccs_pasd.image.image}}:{{$.Values.low_mccs_pasd.image.tag}}
        imagePullPolicy: IfNotPresent
        command:
          - "PasdBusSimulatorServer"
        env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: SIMULATOR_PORT
            value: {{$value.port | default "502" | quote}}
          - name: SIMULATOR_CONFIG_PATH
            value: /etc/pasd-configuration/pasd_configuration.yaml
        volumeMounts:
        - name: pasd-configuration-volume
          mountPath: /etc/pasd-configuration
      volumes:
        - name: pasd-configuration-volume
          configMap:
            name: pasd-configuration-{{$key}}
{{- end}}