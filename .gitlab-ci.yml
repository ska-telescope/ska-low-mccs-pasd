image: $SKA_K8S_TOOLS_BUILD_DEPLOY
variables:
  GIT_SUBMODULE_STRATEGY: recursive

cache:
  paths:
    - build

stages:
  - lint
  - build
  - test
  - test-temp
  - publish
  - pages
  - scan

include:
  # Python packages build,lint, test and publish
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/python.gitlab-ci.yml'

  # OCI
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/oci-image.gitlab-ci.yml'

  # Docs pages
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/docs.gitlab-ci.yml'

  # Create Gitlab CI badges from CI metrics
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'

  # Create a release
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/release.gitlab-ci.yml'

  # Helm chart
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/helm-chart.gitlab-ci.yml'

  # k8s
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/k8s.gitlab-ci.yml'

  # Notebooks
  - project: 'ska-telescope/templates-repository'
    file: gitlab-ci/includes/notebook.gitlab-ci.yml

notebook-lint:
  when: manual

notebook-test:
  when: manual

.install-python-3-11: &install-python-3-11
  - export DEBIAN_FRONTEND=noninteractive
  - apt update
  - apt install -y software-properties-common gnupg dirmngr
  - add-apt-repository ppa:deadsnakes/ppa
  - apt install -y python3.11 python3.11-venv
  - python3.11 -m ensurepip
  - python3.11 -m pip install --upgrade pip poetry
  - poetry config virtualenvs.create false
  - apt clean

python-lint:
  when: manual

python-test:
  when: manual

docs-build:
  when: manual

python-3-11-lint:
  extends: python-lint
  stage: lint
  when: on_success
  before_script:
    - *install-python-3-11
    - !reference [python-lint, before_script]

python-3-11-test:
  extends: python-test
  stage: test
  when: on_success
  before_script:
    - *install-python-3-11
    - !reference [python-test, before_script]

docs-3-11-build:
  extends: docs-build
  stage: build
  when: on_success
  before_script:
    - *install-python-3-11
    - update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1
    - !reference [docs-build, before_script]

# TODO: For now this manual step deploys to the STFC cloud just like the
# automatic step does.
# In future, we'll set it to deploy to an environment with PaSD hardware
# to test against.
temp-k8s-test:
  stage: test-temp
  when: manual
  tags:
    - k8srunner
  variables:
    TANGO_HOST: "tango-databaseds.$KUBE_NAMESPACE:10000"
    KUBE_NAMESPACE: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA'
  before_script:
    - make k8s-install-chart
    - make k8s-wait
  script:
    - make k8s-test
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - "build/"
    reports:
      junit: build/report.xml
    when: always

temp-xray-publish:
  stage: test-temp
  needs:
    - temp-k8s-test
  tags:
    - k8srunner
  image: $SKA_K8S_TOOLS_BUILD_DEPLOY
  variables:
    REALHW_OR_SIMULATED: simulated
  script:
    - make xray-publish
  allow_failure: true

temp-stop-k8s:
  stage: test-temp
  needs:
    - temp-k8s-test
  tags:
    - k8srunner
  environment:
    name: test-temp/$CI_COMMIT_REF_SLUG
    action: stop
  image: $SKA_K8S_TOOLS_BUILD_DEPLOY
  variables:
    KUBE_NAMESPACE: 'ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA'
  script:
    - make k8s-uninstall-chart
    - kubectl -n $KUBE_NAMESPACE delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,configmaps --all
    - make k8s-delete-namespace
  allow_failure: true
